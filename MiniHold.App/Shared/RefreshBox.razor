@if (Thermostat != null)
{
    <h1>
        <span class="visually-hidden">
            Current thermostat:
        </span>
        @Thermostat.ThermostatClient.Name
    </h1>

    foreach (var a in Thermostat.Information.Alerts)
    {
        <div class="alert alert-danger" role="alert">
            @a.Text (@a.DateTime)
        </div>
    }

    string cssClass = Thermostat.Information.Mode switch
    {
        "auto" => "bg-success",
        "heat" => "bg-danger",
        "auxHeatOnly" => "bg-danger",
        "cool" => "bg-primary",
        _ => "bg-secondary"
    };

    <div id="equipment-status">
        <div class="badge @cssClass">
            <span class="visually-hidden">
                Thermostat mode:
            </span>
            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Thermostat.Information.Mode)
        </div>
        @foreach (var eq in MiniHold.Abstractions.EquipmentModule.FromThermostatInformation(Thermostat.Information))
        {
            string icon = eq.Comp ? "transfer" : eq.Heat ? "fire" : "";
            <div class="badge @(eq.Heat ? "bg-danger" : eq.Cool ? "bg-primary" : "bg-secondary")">
                <span class="visually-hidden">
                    Running equipment:
                </span>
                @if (icon != "")
                {
                    <span class="oi oi-@icon" aria-hidden="true"></span>
                    @:&nbsp;
                }
                @eq.Name
            </div>
        }
    </div>

    <hr />

    <center>
        <strong>Last updated:</strong>
        <br />
        @Thermostat.LastUpdatedLocal.ToString("h:mm tt on MMMM d, yyyy")
        <br />
        <button class="btn btn-primary mt-2" @onclick="Thermostat.Refresh">
            Refresh
        </button>
    </center>
}

@code {
    [Parameter]
    public ThermostatObject Thermostat { get; set; }
}
