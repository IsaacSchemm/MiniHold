@inherits MiniHoldPage
@page "/"
@using I8Beef.Ecobee;
@using MiniHold.Abstractions;

<LoadingSpinner Busy="@App.Busy" />

@if (ClientStatic.ThermostatObjects.Count == 0)
{
    <p>
        Use the API Connection page to set up the app.
    </p>
}

@foreach (var ti in ClientStatic.ThermostatObjects)
{
    var thermostatClient = ti.ThermostatClient;
    var info = ti.Information;

    var equipment = EquipmentModule.FromThermostatInformation(info);

    <h1>@thermostatClient.Name</h1>

    <hr />
    <RefreshBox Thermostat="@ti" />

    if (equipment.Any())
    {
        <hr />
        <div title="Running Equipment">
            @foreach (var eq in equipment)
            {
                <div class="badge @(eq.Heat ? "bg-danger" : eq.Cool ? "bg-primary" : "bg-secondary")">
                    @if (eq.Comp)
                    {
                        <span class="oi oi-transfer" aria-hidden="true"></span>
                        @:&nbsp;
                    }
                    @if (eq.AuxHeat)
                    {
                        <span class="oi oi-fire" aria-hidden="true"></span>
                        @:&nbsp;
                    }
                    @eq.Name
                </div>
                @:&nbsp;
            }
        </div>
    }

    <div class="container-fluid indexPage">
        <div class="row">
            <div class="col-md-6 col-lg-4">
                <hr />
                <h5>Outdoor</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Weather" />
                <hr />
                <h5>Indoor</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Actual" />
                <hr />
                <h5>Runtime</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Desired" />
            </div>
            <div class="col-md-6 col-lg-4">
                <hr />
                <div style="display: grid; row-gap: 1em; column-gap: 1em">
                    <h5 style="grid-row: 1; grid-column: 1">
                        10m Hold
                    </h5>
                    <GridButton Position="(2, 1)" OnClick="ti.Hold10Heat" Text="+2°" />
                    <GridButton Position="(3, 1)" OnClick="ti.Hold10Cool" Text="-2°" />
                    <GridButton Position="(4, 1)" OnClick="ti.Hold10Fan" Text="Fan" />
                    <GridButton Position="(5, 1)" OnClick="ti.Hold10Away" Text="Away" />

                    <h5 style="grid-row: 1; grid-column: 2">
                        30m Hold
                    </h5>
                    <GridButton Position="(2, 2)" OnClick="ti.Hold30Heat" Text="+2°" />
                    <GridButton Position="(3, 2)" OnClick="ti.Hold30Cool" Text="-2°" />
                    <GridButton Position="(4, 2)" OnClick="ti.Hold30Fan" Text="Fan" />
                    <GridButton Position="(5, 2)" OnClick="ti.Hold30Away" Text="Away" />

                    <h5 style="grid-row: 6; grid-column: 1 / 3">
                        Away
                    </h5>
                    <GridButton Position="(7, 1)" OnClick="ti.Hold2HAway" Text="for 2 hours" />
                    <GridButton Position="(8, 1)" OnClick="ti.Hold4HAway" Text="for 4 hours" />
                    <GridButton Position="(9, 1)" OnClick="ti.Hold6HAway" Text="for 6 hours" />
                    <GridButton Position="(7, 2)" OnClick="ti.Hold7AAway" Text="until 7 am" />
                    <GridButton Position="(8, 2)" OnClick="ti.Hold4PAway" Text="until 4 pm" />
                    <GridButton Position="(9, 2)" OnClick="ti.Hold9PAway" Text="until 9 pm" />
                </div>
            </div>
            <div class="col-md-6 col-lg-4">
                <hr />
                <h5>Program</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Program" />
                @if (info.Events.FirstOrDefault() is Event e && e.EventType == "hold")
                {
                    var temp = e.AbsoluteTemperatureRanges.SingleOrDefault();
                    <hr />
                    <h5>Hold</h5>
                    <TemperatureDisplayBox UserInterfaceReading="@temp" />
                    <div>
                        <strong>Start:</strong> @e.StartDate?.ToString("h:mm tt M/d/yy")
                    </div>
                    <div>
                        <strong>End:</strong> @e.EndDate?.ToString("h:mm tt M/d/yy")
                    </div>
                    <center>
                        <button class="btn btn-secondary mt-2" @onclick="ti.ClearHold">
                            Cancel Hold
                        </button>
                    </center>
                }
            </div>
        </div>
    </div>
}

<div class="mb-4"></div>
