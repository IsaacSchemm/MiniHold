@inherits MiniHoldPage
@page "/"
@using I8Beef.Ecobee;
@using MiniHold.Abstractions;

<LoadingSpinner Busy="@App.Busy" />

@if (ClientStatic.ThermostatObjects.Count == 0)
{
    <p>
        Use the Setup page to set up the app.
    </p>
}

@foreach (var ti in ClientStatic.ThermostatObjects)
{
    var thermostatClient = ti.ThermostatClient;
    var info = ti.Information;

    var activeHold = info.Events.Where(x => x.Running).Take(1).Where(e => e.EventType == "hold").FirstOrDefault();

    var equipment = EquipmentModule.FromThermostatInformation(info);

    <RefreshBox Thermostat="@ti" />

    if (equipment.Any())
    {
        <hr />
        <div>
            <span class="visually-hidden">
                Running equipment:
            </span>
            @foreach (var eq in equipment)
            {
                <div class="badge @(eq.Heat ? "bg-danger" : eq.Cool ? "bg-primary" : "bg-secondary")">
                    @if (eq.Comp)
                    {
                        <span class="oi oi-transfer" aria-hidden="true"></span>
                        @:&nbsp;
                    }
                    @if (eq.AuxHeat)
                    {
                        <span class="oi oi-fire" aria-hidden="true"></span>
                        @:&nbsp;
                    }
                    @eq.Name
                </div>
                @:&nbsp;
            }
        </div>
    }

    <div class="container-fluid indexPage">
        <div class="row">
            <div class="col-md-6 col-lg-4">
                <h4 class="visually-hidden">Apply Hold</h4>
                <hr />
                <div style="display: grid; row-gap: 1em; column-gap: 1em">
                    <h5 style="grid-row: 1; grid-column: 1">
                        15m Hold
                    </h5>
                    <GridButton Position="(2, 1)" OnClick="ti.Hold15Heat" Text="+2°F" Suffix="for 15 minutes" />
                    <GridButton Position="(3, 1)" OnClick="ti.Hold15Cool" Text="-2°F" Suffix="for 15 minutes" />
                    <GridButton Position="(4, 1)" OnClick="ti.Hold15Fan" Text="Fan" Suffix="for 15 minutes" />

                    <h5 style="grid-row: 1; grid-column: 2">
                        30m Hold
                    </h5>
                    <GridButton Position="(2, 2)" OnClick="ti.Hold30Heat" Text="+2°F" Suffix="for 30 minutes" />
                    <GridButton Position="(3, 2)" OnClick="ti.Hold30Cool" Text="-2°F" Suffix="for 30 minutes" />
                    <GridButton Position="(4, 2)" OnClick="ti.Hold30Fan" Text="Fan" Suffix="for 30 minutes" />

                    <h5 style="grid-row: 5; grid-column: 1 / 3">
                        Away
                    </h5>
                    <GridButton Position="(6, 1)" OnClick="ti.Hold1HAway" Text="for 1 hour" Prefix="Away" />
                    <GridButton Position="(7, 1)" OnClick="ti.Hold1DAway" Text="for 1 day" Prefix="Away" />
                    <GridButton Position="(8, 1)" OnClick="ti.Hold7DAway" Text="for 1 week" Prefix="Away" />
                    <GridButton Position="(6, 2)" OnClick="ti.Hold7AAway" Text="until 7 am" Prefix="Away" />
                    <GridButton Position="(7, 2)" OnClick="ti.Hold4PAway" Text="until 4 pm" Prefix="Away" />
                    <GridButton Position="(8, 2)" OnClick="ti.Hold9PAway" Text="until 9 pm" Prefix="Away" />

                    <div style="grid-row: 9; grid-column: 1 / 3" class="text-muted">
                        (or until cancelled)
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-lg-4">
                <h4 class="visually-hidden">Outdoor Temperature</h4>
                <hr />
                <h5>Weather</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Weather" />
                @foreach (var f in info.DailyForecasts.Take(1))
                {
                    <hr />
                    <h5>Forecast</h5>
                    <div>@f.Date.ToString("dddd, MMM d")</div>
                    <TemperatureDisplayBox UserInterfaceReading="@f" />
                }
            </div>
            <div class="col-md-6 col-lg-4">
                <h4 class="visually-hidden">Indoor Temperature</h4>
                <hr />
                <h5>Current Indoor Temperature</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Actual" />
                <hr />
                <h5>Program</h5>
                <TemperatureDisplayBox UserInterfaceReading="@info.Program" />
                @if (activeHold != null)
                {
                    var temp = activeHold.AbsoluteTemperatureRanges.SingleOrDefault();
                    <hr />
                    <h5>Hold</h5>
                    <TemperatureDisplayBox UserInterfaceReading="@temp" />
                    <div>
                        <strong>Start:</strong> @activeHold.StartDate?.ToString("h:mm tt M/d/yy")
                    </div>
                    <div>
                        <strong>End:</strong> @activeHold.EndDate?.ToString("h:mm tt M/d/yy")
                    </div>
                    <center>
                        <button class="btn btn-secondary mt-2" @onclick="ti.ClearHold">
                            Cancel Hold
                        </button>
                    </center>
                }
            </div>
            <div class="col-12">
                <hr />
            </div>
            <div class="col-xl-6">
                <h4>Sensors</h4>

                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Temp</th>
                            <th scope="col">Occ.</th>
                            <th scope="col">Diff.</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in ti.Information.Sensors)
                        {
                            var average = ti.Information.Actual.Temperature.SingleOrDefault();
                            var specific = s.Readings.Temperature.SingleOrDefault();
                            var offset = Temperature.FromFarenheit(specific.Farenheit - average.Farenheit);
                            <tr>
                                <td>@s.Name</td>
                                <td>@specific</td>
                                <td>
                                    @if (s.Occupied)
                                    {
                                        <span class="visually-hidden">yes</span>
                                        <span aria-hidden="true">✓</span>
                                    }
                                    else
                                    {
                                        <span class="visually-hidden">no</span>
                                    }
                                </td>
                                <td>@offset</td>
                            </tr>
                        }
                        @if (ti.Information.Sensors.Length > 1)
                        {
                            foreach (var t in ti.Information.Actual.Temperature)
                            {
                                <tr class="text-muted">
                                    <td>All</td>
                                    <td>@t</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-xl-6">
                <h4>Comfort Settings</h4>

                <table class="table">
                    <thead>
                        <tr style="white-space: nowrap">
                            <th scope="col">Name</th>
                            <th scope="col">
                                Heat at
                            </th>
                            <th scope="col">
                                Stop at
                            </th>
                            <th scope="col">
                                Cool at
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in ti.Information.ComfortLevels)
                        {
                            <tr>
                                <td>@s.Name</td>
                                <td>@info.ApplyHeatDelta(s.HeatTemp)</td>
                                <td>@s.HeatTemp – @s.CoolTemp</td>
                                <td>@info.ApplyCoolDelta(s.CoolTemp)</td>
                            </tr>
                        }
                        <tr class="text-muted">
                            <td>Runtime</td>
                            <td>@info.ApplyHeatDelta(info.Runtime.HeatTemp)</td>
                            <td>@info.Runtime.HeatTemp – @info.Runtime.CoolTemp</td>
                            <td>@info.ApplyCoolDelta(info.Runtime.CoolTemp)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<div class="mb-4"></div>
