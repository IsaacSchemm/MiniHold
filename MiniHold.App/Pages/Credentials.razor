@page "/credentials"
@using I8Beef.Ecobee;
@using I8Beef.Ecobee.Exceptions;
@using I8Beef.Ecobee.Messages;
@using MiniHold.Abstractions;

@if (ClientStatic.Busy > 0)
{
    <div style="position: fixed; width: 100vw; height: 100vh; top: 0; left: 0; background-color: rgb(128, 128, 128, 0.5); z-index: 2" title="Loading"></div>
}

<h2>Token</h2>

@if (ClientStatic.EcobeePin != null)
{
    <p>
        Your PIN code is: <strong>@ClientStatic.EcobeePin</strong>
    </p>
    <p>
        Enter this code in the My Apps > Add Application section of the customer portal, and press OK when ready.
    </p>

    <form @onsubmit="GetToken">
        <button type="submit" class="btn btn-primary">
            OK
        </button>
    </form>
}

@if (ClientStatic.HasToken)
{
    <form @onsubmit="RemoveToken">
        <button type="submit" class="btn btn-danger">
            Remove token
        </button>
    </form>
}

@code {
    string newApiKey = "";

    protected override async Task OnInitializedAsync()
    {
        await ClientStatic.UpdateAsync();
        await base.OnInitializedAsync();
    }

    private async Task<StoredAuthToken> GetStoredAuthToken(CancellationToken _ = default)
    {
        return await SecureStorage.Default.GetAsync("ecobeeToken") is string json
            ? System.Text.Json.JsonSerializer.Deserialize<StoredAuthToken>(json)
            : null;
    }

    private async Task SetStoredAuthToken(StoredAuthToken token, CancellationToken _ = default)
    {
        await SecureStorage.Default.SetAsync("ecobeeToken", System.Text.Json.JsonSerializer.Serialize(token));
    }

    private async Task GetToken()
    {
        await ClientStatic.GetToken();
    }

    private async Task RemoveToken()
    {
        await ClientStatic.RemoveToken();
    }
}
