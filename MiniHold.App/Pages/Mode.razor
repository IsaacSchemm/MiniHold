@inherits MiniHoldPage
@page "/mode"
@using I8Beef.Ecobee;
@using MiniHold.Abstractions;

<style type="text/css">
    #modeGrid {
        display: grid;
        row-gap: 1em;
        column-gap: 1em;
        margin: auto;
        max-width: 320px;
    }

    .heat {
        background-color: mistyrose;
        color: black;
    }

    .cool {
        background-color: lightcyan;
        color: black;
    }
</style>

<LoadingSpinner Busy="@App.Busy" />

@foreach (var ti in ClientStatic.ThermostatObjects)
{
    <RefreshBox Thermostat="@ti" />

    <hr />

    <h4>Mode</h4>

    <h5>
        Current: @ti.Information.DisplayMode
    </h5>

    <hr />

    <div id="modeGrid">
        <button class="btn btn-secondary" style="grid-row: 1; grid-column: 1 / 3" @onclick='() => setMode(ti, "auto")'>
            Auto
        </button>
        <button class="btn btn-secondary heat" style="grid-row: 2; grid-column: 1" @onclick='() => setMode(ti, "heat")'>
            Heat
        </button>
        <button class="btn btn-secondary heat" style="grid-row: 2; grid-column: 2" @onclick='() => setMode(ti, "auxHeatOnly")'>
            Aux
        </button>
        <button class="btn btn-secondary cool" style="grid-row: 3; grid-column: 1 / 3" @onclick='() => setMode(ti, "cool")'>
            Cool
        </button>
        <button class="btn btn-secondary" style="grid-row: 4; grid-column: 1 / 3" @onclick='() => setMode(ti, "off")'>
            Off
        </button>
    </div>
}

@code {
    async Task setMode(ThermostatObject ti, string mode)
    {
        await ti.Act(async () => await ti.ThermostatClient.SetModeAsync(mode));
    }
}